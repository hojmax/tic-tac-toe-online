{"version":3,"sources":["components/Fire.js","components/Lobby.js","components/RandomString.js","components/Connecting.js","App.js","index.js"],"names":["Database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Lobby","props","useState","undefined","gameState","setGameState","waitingForServer","setWaitingForServer","hasCopiedURL","setHasCopiedURL","animateWinningMove","cells","winner","baseAnimation","forEach","e","document","getElementById","style","animation","lobby","local","marking","color","useEffect","board","hasEmptyCell","i","rowSum","colSum","j","Math","abs","push","diagonal","diagonalValue","reduce","a","b","getBoardEvaluation","server","clientsTurn","clientID","players","clientTurn","canPressCell","x","y","lobbyExists","length","select","BottomText","lobbyURL","window","location","origin","pathname","code","fontSize","id","margin","type","onClick","event","target","spellCheck","readOnly","value","size","text","el","createElement","setAttribute","position","left","body","appendChild","execCommand","removeChild","copyToClipboard","className","cellBorder","map","array","updates","newTurn","indexOf","ref","update","handleCellPress","cursor","borderTop","borderBottom","borderLeft","borderRight","onAnimationEnd","search","padding","cellSpacing","getRandomString","len","chars","output","floor","random","Connecting","options","require","errorMsg","setErrorMsg","showContent","setShowContent","clientIDLength","connect","lobbyCode","once","snapshot","data","val","then","on","exists","setLobbyExists","setLobby","onDisconnect","remove","linkCode","substring","lobbyCodeLength","set","newLobbyCode","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.38a96979.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAmFYtVXhovd32ZhINx0AYp2obHhEbyZ1Q\",\n  authDomain: \"sprintsolve.firebaseapp.com\",\n  databaseURL: \"https://sprintsolve-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"sprintsolve\",\n  storageBucket: \"sprintsolve.appspot.com\",\n  messagingSenderId: \"931958489164\",\n  appId: \"1:931958489164:web:7248abda53ede2ec9ef4e9\",\n  measurementId: \"G-V4L6NX29HP\"\n}\nconst Fire = firebase.initializeApp(firebaseConfig);\nconst Database = firebase.database();\n\nexport {\n  Fire, Database\n}","import React, { useState, useEffect } from 'react'\nimport { Database } from \"./Fire.js\"\n\nfunction Lobby(props) {\n  const [gameState, setGameState] = useState(undefined)\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [hasCopiedURL, setHasCopiedURL] = useState(false)\n  const getBoardEvaluation = (board) => {\n    let hasEmptyCell = false\n    for (let i = 0; i < 3; i++) {\n      let rowSum = 0\n      let colSum = 0\n      for (let j = 0; j < 3; j++) {\n        if (board[i][j] === 0) {\n          hasEmptyCell = true\n        }\n        rowSum += board[i][j]\n        colSum += board[j][i]\n      }\n      if (Math.abs(rowSum) === 3) {\n        let cells = []\n        for (let j = 0; j < 3; j++) {\n          cells.push([j, i])\n        }\n        animateWinningMove(cells, rowSum / 3)\n        return rowSum / 3\n      } else if (Math.abs(colSum) === 3) {\n        let cells = []\n        for (let j = 0; j < 3; j++) {\n          cells.push([i, j])\n        }\n        animateWinningMove(cells, colSum / 3)\n        return colSum / 3\n      }\n    }\n    const diagonals = [\n      [[0, 0], [1, 1], [2, 2]],\n      [[0, 2], [1, 1], [2, 0]]\n    ]\n    for (let diagonal of diagonals) {\n      const diagonalValue = diagonal.reduce((a, b) => a + board[b[1]][b[0]], 0)\n      if (Math.abs(diagonalValue) === 3) {\n        animateWinningMove(diagonal, diagonalValue / 3)\n        return diagonalValue / 3\n      }\n    }\n    if (!hasEmptyCell) {\n      return 0\n    }\n    return undefined\n  }\n  const animateWinningMove = (cells, winner) => {\n    const baseAnimation = \" 0.2s ease-in-out, fontBounce 0.2s ease-in-out\"\n    cells.forEach(e => {\n      document.getElementById(`cell${3 * e[1] + e[0]}`).style.animation = winner === props.lobby.local.marking ? \"blackToGreen\" + baseAnimation : \"blackToRed\" + baseAnimation\n      document.getElementById(`cell${3 * e[1] + e[0]}`).style.color = winner === props.lobby.local.marking ? \"green\" : \"red\"\n    })\n  }\n  useEffect(() => {\n    setGameState(getBoardEvaluation(props.lobby.server.board))\n    setWaitingForServer(false)\n  }, [props.lobby.server.board])\n  const clientsTurn = () => {\n    return props.lobby.local.clientID === props.lobby.server.players[props.lobby.server.clientTurn]\n  }\n  const canPressCell = (x, y) => {\n    return (\n      !waitingForServer &&\n      clientsTurn() &&\n      gameState === undefined &&\n      props.lobbyExists &&\n      props.lobby.server.players.length === 2 &&\n      props.lobby.server.board[y][x] === 0\n    )\n  }\n  const handleCellPress = (x, y) => {\n    if (canPressCell(x, y)) {\n      setWaitingForServer(true)\n      let updates = {}\n      const newTurn = 1 - props.lobby.server.players.indexOf(props.lobby.local.clientID)\n      updates[\"tictactoeGames/_\" + props.lobby.local.code + \"/board/\" + y + \"/\" + x] = props.lobby.local.marking\n      updates[\"tictactoeGames/_\" + props.lobby.local.code + \"/clientTurn\"] = newTurn\n      Database.ref().update(updates)\n    }\n  }\n  const copyToClipboard = (text) => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  }\n  useEffect(() => {\n    hasCopiedURL && document.getElementById(\"lobbyURL\").select()\n  }, [hasCopiedURL])\n  const BottomText = () => {\n    if (props.lobby.server.players.length < 2) {\n      const lobbyURL = window.location.origin + window.location.pathname + \"?\" + props.lobby.local.code\n      return <>\n        <p style={{fontSize: \"2vw\"}}>Waiting for opponent to join.</p>\n        <div id=\"loadingAnimation\"></div>\n        <br />\n        <br />\n        <p style={{ margin: \"0px 0px 10px 0px\", fontSize: \"1.5vw\" }}>Invite a friend with an URL:</p>\n        <div style={{ fontSize: \"0px\" }}>\n          <input\n            id=\"lobbyURL\"\n            type=\"text\"\n            onClick={(event) => event.target.select()}\n            spellCheck=\"false\"\n            readOnly\n            value={lobbyURL}\n            size={lobbyURL.length + 1} />\n          <button\n            onClick={(event) => { copyToClipboard(lobbyURL); setHasCopiedURL(true); document.getElementById(\"lobbyURL\").select() }}\n            id=\"lobbyURLButton\">\n            {hasCopiedURL ? <i className=\"fas fa-check\"></i> : <i className=\"fas fa-link\"></i>}\n          </button>\n        </div>\n      </>\n    } else {\n      return <p\n        id=\"bottomText\"\n        style={{\n          animation: \"flash 1s\",\n          fontSize: \"2vw\",\n        }}>\n        {gameState === undefined ?\n          (clientsTurn() ? `Your turn to move (${props.lobby.local.marking === 1 ? \"X\" : \"0\"}).` : \"Waiting for opponent to move.\") :\n          (gameState === 0 ? \"The game has ended in a draw.\" :\n            (gameState === props.lobby.local.marking ? <span>You <span style={{ color: \"green\" }}>won</span> the game.</span> : <span>You <span style={{ color: \"red\" }}>lost</span> the game.</span>))\n        }\n      </p>\n    }\n  }\n  const cellBorder = \"1.5px solid rgb(50,50,50)\"\n  const cells = props.lobby.server.board.map(\n    (array, y) => <tr key={y}>{array.map(\n      (e, x) => <td key={x}\n        onClick={() => handleCellPress(x, y)}\n        id={`cell${y * 3 + x}`}\n        style={{\n          cursor: canPressCell(x, y) ? \"pointer\" : \"default\",\n          borderTop: y === 0 ? \"none\" : cellBorder,\n          borderBottom: y === 2 ? \"none\" : cellBorder,\n          borderLeft: x === 0 ? \"none\" : cellBorder,\n          borderRight: x === 2 ? \"none\" : cellBorder,\n          animation: e === 0 ? undefined : \"fontBounce 0.2s ease-in-out, flash 0.2s ease-in-out\"\n        }}\n        onAnimationEnd={() => document.getElementById(`cell${3 * y + x}`).style.animation = \"none\"}\n        className=\"tictactoeCell\">\n        {e === 1 ? \"X\" : (e === -1 ? \"O\" : \"\")}\n      </td>\n    )}</tr>\n  )\n  return (\n    <div>\n      <span onClick={() => window.location.search = \"\"} className=\"clickableSpan\" style={{margin: \"0px\", padding: \"0px\", fontSize: \"2vw\"}}>Main Menu</span>\n      <center>\n        <table cellSpacing=\"0\">\n          <tbody>\n            {cells}\n          </tbody>\n        </table>\n        <BottomText lobby={props} />\n        {!props.lobbyExists && <p style={{fontSize:\"1.5vw\"}}className=\"errorMsg\">Opponent disconnected.</p>}\n      </center>\n    </div>\n  )\n}\n\nexport default Lobby","function getRandomString(len) {\n  let chars = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\n    \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\n    \"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\n    \"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"\n  ]\n  let output = \"\"\n  for (let i = 0; i < len; i++) {\n    output += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return output\n}\n\nexport default getRandomString","import React, { useState, useEffect } from 'react'\nimport { Database } from \"./Fire.js\"\nimport getRandomString from \"./RandomString.js\";\n\nfunction Connecting(props) {\n  const options = require(\"../Options.json\")\n  const [errorMsg, setErrorMsg] = useState(\"\")\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [showContent, setShowContent] = useState(false)\n  const clientID = getRandomString(options.clientIDLength)\n\n  const connect = (lobbyCode) => {\n    let marking;\n    Database.ref(\"tictactoeGames/_\" + lobbyCode).once(\"value\", (snapshot) => {\n      const data = snapshot.val()\n      marking = (clientID === data.players[data.clientTurn] ? 1 : -1)\n    }).then(() => {\n      Database.ref(\"tictactoeGames/_\" + lobbyCode).on(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          const data = snapshot.val()\n          props.setLobbyExists(true)\n          props.setLobby({ server: data, local: { marking: marking, clientID: clientID, code: lobbyCode } })\n        } else {\n          props.setLobbyExists(false)\n        }\n      })\n    })\n    Database.ref(\"tictactoeGames/_\" + lobbyCode).onDisconnect().remove();\n  }\n  const tryJoining = (lobbyCode) => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      Database.ref(\"tictactoeGames/_\" + lobbyCode).once(\"value\").then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            const data = snapshot.val()\n            if (data.players.length < 2) {\n              Database.ref(\"tictactoeGames/_\" + lobbyCode + \"/players\")\n                .set([data.players[0], clientID])\n                .then(connect(lobbyCode))\n            }\n          } else {\n            setErrorMsg(\"The challenge link is invalid.\")\n            setShowContent(true)\n            setWaitingForServer(false)\n          }\n        }\n      )\n    }\n  }\n  const createLobby = () => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      const newLobbyCode = getRandomString(options.lobbyCodeLength)\n      Database.ref(\"tictactoeGames/_\" + newLobbyCode).set({\n        board:\n          [[0, 0, 0],\n          [0, 0, 0],\n          [0, 0, 0]],\n        players: [clientID],\n        clientTurn: Math.floor(Math.random() * 2)\n      }).then(() => {\n        connect(newLobbyCode)\n      })\n    }\n  }\n  useEffect(() => {\n    const linkCode = window.location.search.substring(1, options.lobbyCodeLength + 1)\n    if (linkCode) {\n      tryJoining(linkCode)\n    } else {\n      setShowContent(true)\n    }\n  }, [])\n  if (!showContent) {\n    return <></>\n  } else {\n    return (\n      <>\n        <center>\n          <h1>Tic-Tac-Toe Online</h1>\n          <p>Create a new lobby <span className=\"clickableSpan\" onClick={createLobby}>here.</span></p>\n          {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n        </center>\n      </>\n    )\n  }\n}\n\nexport default Connecting","import React, { useState } from 'react'\nimport Lobby from './components/Lobby.js'\nimport Connecting from './components/Connecting.js'\nimport \"./App.css\"\n\nfunction App() {\n  const [lobby, setLobby] = useState(\"\")\n  const [lobbyExists, setLobbyExists] = useState(false)\n  if (lobby) {\n    return <Lobby lobbyExists={lobbyExists} lobby={lobby} />\n  } else {\n    return <Connecting setLobbyExists={setLobbyExists} setLobby={setLobby} />\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}